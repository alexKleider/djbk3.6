x Don't save blank entities for every request
x Code smell: POST test is too long?
x Display multiple entities in the table.
- Clean up after ft runs.
- Support more than one set of entities.

- Adjust models so that entities are associated with different users.
- Add unique URLs for each user (list of entities.)
x Add a URL for creating a new list (user) of entities via POST
- Add URLs for adding entities to existing lists (users') via POST

Combine 
1. Adding new functionality
    adding a new ft and new application code
2. Refactoring application code
    to deliver same functionality but using new design

Rule of thumb (p105:)  If Unit tests are passing but 
funtional tests are not, it's often a problem not covered
by the unit tests- in our case: often a template problem.
'entities/templates/view.html' doesn't specify a specific POST
destination URL.



    url(r'^$', views.home_page, name='home'),
    # if POST: redirects to entities/the_only_listing
    # else renders 'home.html

    url(r'^entities/the_only_listing/$',
        views.list_view, name='list_view'),
    # renders listing.html


Sequence:
    add a URL to urls.py,
    then add the corresponding view to app/views.py,
    and finally add a template if needed.
